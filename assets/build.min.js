(function(modules) {
    var installedModules = {};
    function __webpack_require__(moduleId) {
        if (installedModules[moduleId]) return installedModules[moduleId].exports;
        var module = installedModules[moduleId] = {
            exports: {},
            id: moduleId,
            loaded: false
        };
        modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
        module.loaded = true;
        return module.exports
    }
    __webpack_require__.m = modules;
    __webpack_require__.c = installedModules;
    __webpack_require__.p = "";
    return __webpack_require__(0)
})([function(module, exports, __webpack_require__) {
    "use strict";
    __webpack_require__(1)();
    var event = __webpack_require__(2);
    var Nanobar = __webpack_require__(3);
    var bar = new Nanobar;
    var el = document.querySelector("article");
    if (!el) {
        el = document.querySelector(".container")
    }
    var vh = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);
    var supportPageOffset = window.pageXOffset !== undefined;
    var isCSS1Compat = (document.compatMode || "") === "CSS1Compat";
    var total = document.body.scrollHeight - vh;
    function setNanobar() {
        var cy = supportPageOffset ? window.pageYOffset: isCSS1Compat ? document.documentElement.scrollTop: document.body.scrollTop;
        if (total > 0) {
            var p = 100 * cy / total;
            bar.go(p)
        }
    }
    setNanobar();
    event.bind(window, "scroll", setNanobar)
},
function(module, exports, __webpack_require__) {
    var now = Date.now ||
    function() {
        return (new Date).getTime()
    };
    function now() {
        return (new Date).getTime()
    }
    var event = __webpack_require__(2);
    function debounce(func, wait, immediate) {
        var timeout, args, context, timestamp, result;
        if (null == wait) wait = 100;
        function later() {
            var last = now() - timestamp;
            if (last < wait && last > 0) {
                timeout = setTimeout(later, wait - last)
            } else {
                timeout = null;
                if (!immediate) {
                    result = func.apply(context, args);
                    if (!timeout) context = args = null
                }
            }
        }
        return function debounced() {
            context = this;
            args = arguments;
            timestamp = now();
            var callNow = immediate && !timeout;
            if (!timeout) timeout = setTimeout(later, wait);
            if (callNow) {
                result = func.apply(context, args);
                context = args = null
            }
            return result
        }
    }
    module.exports = top;
    function top() {
        var el = document.createElement("a");
        el.id = "back-to-top";
        el.href = "#";
        var height = window.innerHeight;
        function onscroll() {
            var top = document.body.scrollTop;
            if (top < height / 2) return hide();
            show()
        }
        function show() {
            el.className = "show"
        }
        function hide() {
            el.className = ""
        }
        event.bind(window, "scroll", debounce(onscroll, 50));
        document.body.appendChild(el)
    }
},
function(module, exports) {
    var bind = window.addEventListener ? "addEventListener": "attachEvent",
    unbind = window.removeEventListener ? "removeEventListener": "detachEvent",
    prefix = bind !== "addEventListener" ? "on": "";
    exports.bind = function(el, type, fn, capture) {
        el[bind](prefix + type, fn, capture || false);
        return fn
    };
    exports.unbind = function(el, type, fn, capture) {
        el[unbind](prefix + type, fn, capture || false);
        return fn
    }
},
function(module, exports) {
    function Nanobar(options) {
        var el = document.getElementById("nanobar");
        if (!el) {
            el = document.createElement("div");
            el.id = "nanobar";
            el.setAttribute("role", "progressbar");
            el.setAttribute("aria-valuemin", 0);
            el.setAttribute("aria-valuemax", 100)
        }
        var bar = document.createElement("div");
        bar.className = "nanobar-progress";
        el.appendChild(bar);
        this.el = el;
        this.bar = bar
    }
    Nanobar.prototype.go = function(percent) {
        if (!this._inbody) {
            this._inbody = true;
            document.body.appendChild(this.el)
        }
        var bar = this.bar;
        bar.className = "nanobar-progress";
        bar.style.width = percent + "%";
        this.el.setAttribute("aria-valuenow", percent);
        if (percent >= 100) {
            bar.style.height = "0"
        } else {
            bar.style.height = "100%"
        }
    };
    Nanobar.prototype.dismiss = function() {
        var me = this;
        me.go(100);
        setTimeout(function() {
            if (me._inbody) {
                document.body.removeChild(me.el);
                me._inbody = false
            }
        },
        300)
    };
    Nanobar.prototype.infinite = function() {
        this.go(0);
        var bar = this.bar;
        bar.style.width = "0";
        bar.style.height = "100%";
        bar.className = "nanobar-progress nanobar-progress-infinite"
    };
    module.exports = Nanobar
}]);
